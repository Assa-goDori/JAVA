package chap4;
/*
 * shift 연산자 : 비트 이동 연산자
 * 	<< n : n 비트만큼 왼쪽으로 이동. 오른쪽 비트는 0으로 채워준다.
 *  >> n : n 비트만큼 오른쪽으로 이동. 왼쪽 비트는 부호비트로 채워준다.
 *  >>> n : n 비트만큼 오른쪽으로 이동. 왼쪽 비트는 0로 채워준다.
 */
public class OpEx8 {

	public static void main(String[] args) {
		System.out.println("8 << 2 : " + (8 << 2));
		/*
		 * 8 : 0000 1000
		 * -------------- <<2 (밀고 난 자리는 없어지고 나머지 자리는 0으로 채움) 
		 * 32 : 0010 0000
		 */
		System.out.println("8 >> 2 : " + (8 >> 2));
		/*
		 * 8 : 0000 1000
		 * -------------- >>2
		 * 2 : 0000 0010
		 */
		System.out.println("8 >>> 2 : " + (8 >>> 2));
		/*
		 * 8 : 0000 1000
		 * -------------- >>>2
		 * 2 : 0000 0010
		 */
		System.out.println("-8 << 2 : " + (-8 << 2));
		/*
		 * -8 : 1111 1000
		 * -------------- <<2
		 * -32 : 1110 0000
		 */
		System.out.println("-8 >> 2 : " + (-8 >> 2));
		/*
		 * -8 : 1111 1000
		 * -------------- >>2
		 * -2 : 1111 1110
		 */
		System.out.println("-8 >>> 2 : " + (-8 >>> 2));
		/*
		 * -8 : 1111 1000
		 * -------------- >>>2
		 *    : 0011 1110
		 */
	}

}
